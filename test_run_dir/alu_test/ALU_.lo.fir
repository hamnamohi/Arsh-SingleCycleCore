circuit ALU_ :
  module ALU_ :
    input clock : Clock
    input reset : UInt<1>
    input io_in_A : SInt<32>
    input io_in_B : SInt<32>
    input io_aluc : UInt<5>
    output io_output : SInt<32>

    node _T = eq(io_aluc, UInt<1>("h0")) @[alu.scala 50:22]
    node _T_1 = eq(io_aluc, UInt<1>("h0")) @[alu.scala 50:44]
    node _T_2 = or(_T, _T_1) @[alu.scala 50:34]
    node _io_output_T = add(io_in_A, io_in_B) @[alu.scala 51:38]
    node _io_output_T_1 = tail(_io_output_T, 1) @[alu.scala 51:38]
    node _io_output_T_2 = asSInt(_io_output_T_1) @[alu.scala 51:38]
    node _T_3 = eq(io_aluc, UInt<1>("h1")) @[alu.scala 52:28]
    node _T_4 = eq(io_aluc, UInt<1>("h1")) @[alu.scala 52:50]
    node _T_5 = or(_T_3, _T_4) @[alu.scala 52:40]
    node _io_output_T_3 = bits(io_in_B, 4, 0) @[alu.scala 53:48]
    node _io_output_T_4 = dshl(io_in_A, _io_output_T_3) @[alu.scala 53:38]
    node _T_6 = eq(io_aluc, UInt<2>("h2")) @[alu.scala 54:28]
    node _T_7 = eq(io_aluc, UInt<2>("h2")) @[alu.scala 54:51]
    node _T_8 = or(_T_6, _T_7) @[alu.scala 54:40]
    node _T_9 = lt(io_in_A, io_in_B) @[alu.scala 55:30]
    node _GEN_0 = mux(_T_9, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[alu.scala 55:40 alu.scala 56:35 alu.scala 58:35]
    node _T_10 = eq(io_aluc, UInt<2>("h3")) @[alu.scala 60:28]
    node _T_11 = eq(io_aluc, UInt<2>("h3")) @[alu.scala 60:51]
    node _T_12 = or(_T_10, _T_11) @[alu.scala 60:41]
    node Ua = asUInt(io_in_A) @[alu.scala 61:34]
    node Ub = asUInt(io_in_B) @[alu.scala 62:34]
    node _T_13 = lt(Ua, Ub) @[alu.scala 63:25]
    node _GEN_1 = mux(_T_13, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[alu.scala 63:30 alu.scala 64:35 alu.scala 66:35]
    node _T_14 = eq(io_aluc, UInt<3>("h4")) @[alu.scala 68:28]
    node _T_15 = eq(io_aluc, UInt<3>("h4")) @[alu.scala 68:50]
    node _T_16 = or(_T_14, _T_15) @[alu.scala 68:40]
    node _io_output_T_5 = xor(io_in_A, io_in_B) @[alu.scala 69:38]
    node _io_output_T_6 = asSInt(_io_output_T_5) @[alu.scala 69:38]
    node _T_17 = eq(io_aluc, UInt<3>("h5")) @[alu.scala 70:28]
    node _T_18 = eq(io_aluc, UInt<3>("h5")) @[alu.scala 70:51]
    node _T_19 = or(_T_17, _T_18) @[alu.scala 70:40]
    node _shift_T = asUInt(io_in_A) @[alu.scala 72:37]
    node _shift_T_1 = bits(io_in_B, 4, 0) @[alu.scala 72:55]
    node shift = dshr(_shift_T, _shift_T_1) @[alu.scala 72:44]
    node _io_output_T_7 = asSInt(shift) @[alu.scala 73:36]
    node _T_20 = eq(io_aluc, UInt<3>("h6")) @[alu.scala 74:28]
    node _T_21 = eq(io_aluc, UInt<3>("h6")) @[alu.scala 74:50]
    node _T_22 = or(_T_20, _T_21) @[alu.scala 74:39]
    node _io_output_T_8 = or(io_in_A, io_in_B) @[alu.scala 75:38]
    node _io_output_T_9 = asSInt(_io_output_T_8) @[alu.scala 75:38]
    node _T_23 = eq(io_aluc, UInt<3>("h7")) @[alu.scala 76:28]
    node _T_24 = eq(io_aluc, UInt<3>("h7")) @[alu.scala 76:51]
    node _T_25 = or(_T_23, _T_24) @[alu.scala 76:40]
    node _io_output_T_10 = and(io_in_A, io_in_B) @[alu.scala 77:38]
    node _io_output_T_11 = asSInt(_io_output_T_10) @[alu.scala 77:38]
    node _T_26 = eq(io_aluc, UInt<4>("h8")) @[alu.scala 78:28]
    node _io_output_T_12 = sub(io_in_A, io_in_B) @[alu.scala 79:38]
    node _io_output_T_13 = tail(_io_output_T_12, 1) @[alu.scala 79:38]
    node _io_output_T_14 = asSInt(_io_output_T_13) @[alu.scala 79:38]
    node _T_27 = eq(io_aluc, UInt<4>("hd")) @[alu.scala 80:28]
    node _T_28 = eq(io_aluc, UInt<3>("h5")) @[alu.scala 80:51]
    node _T_29 = or(_T_27, _T_28) @[alu.scala 80:40]
    node _io_output_T_15 = bits(io_in_B, 4, 0) @[alu.scala 81:49]
    node _io_output_T_16 = dshr(io_in_A, _io_output_T_15) @[alu.scala 81:39]
    node _T_30 = eq(io_aluc, UInt<5>("h1f")) @[alu.scala 82:28]
    node _GEN_2 = mux(_T_30, io_in_A, asSInt(UInt<1>("h0"))) @[alu.scala 82:43 alu.scala 83:27 alu.scala 48:14]
    node _GEN_3 = mux(_T_29, _io_output_T_16, _GEN_2) @[alu.scala 80:64 alu.scala 81:27]
    node _GEN_4 = mux(_T_26, _io_output_T_14, _GEN_3) @[alu.scala 78:40 alu.scala 79:27]
    node _GEN_5 = mux(_T_25, _io_output_T_11, _GEN_4) @[alu.scala 76:65 alu.scala 77:27]
    node _GEN_6 = mux(_T_22, _io_output_T_9, _GEN_5) @[alu.scala 74:63 alu.scala 75:27]
    node _GEN_7 = mux(_T_19, _io_output_T_7, _GEN_6) @[alu.scala 70:65 alu.scala 73:27]
    node _GEN_8 = mux(_T_16, _io_output_T_6, _GEN_7) @[alu.scala 68:64 alu.scala 69:27]
    node _GEN_9 = mux(_T_12, _GEN_1, _GEN_8) @[alu.scala 60:65]
    node _GEN_10 = mux(_T_8, _GEN_0, _GEN_9) @[alu.scala 54:65]
    node _GEN_11 = mux(_T_5, _io_output_T_4, _GEN_10) @[alu.scala 52:64 alu.scala 53:26]
    node _GEN_12 = mux(_T_2, _io_output_T_2, _GEN_11) @[alu.scala 50:58 alu.scala 51:27]
    io_output <= asSInt(bits(_GEN_12, 31, 0))
